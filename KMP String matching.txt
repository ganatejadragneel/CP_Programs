package gfg;
import java.util.*;
import java.io.*;
class GFG
{    
    public static void KMPSearch(String text,String pattern){
        int m = text.length();
        int n = pattern.length();
        int lps[] = new int[n];
        computeLPSArray(pattern,n,lps);
        
        int j=0;
        int i=0;
        
        while(i<m){
            if(pattern.charAt(j)==text.charAt(i)){
                j++;
                i++;
            }
            if(j==n){
                System.out.println("Match Found at: "+(i-j));
                j=lps[j-1];
            }
            else if(i<m && pattern.charAt(j)!=text.charAt(i)){
                if(j!=0) j=lps[j-1];
                else i++;
            }
        }
    }
    
    public static void computeLPSArray(String pattern,int n, int lps[]){
        int i=1;
        int len=0;
        lps[0]=0;
        
        while(i<n){
            if(pattern.charAt(i)==pattern.charAt(len)){
                len++;
                lps[i]=len;
                i++;
            }
            else{
                if(len!=0){
                    len=lps[len-1];
                }
                else{
                    lps[i]=len;
                    i++;
                }
            }
        }
    }
    
    public static void main (String[] args) throws IOException{
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
	int t = Integer.parseInt(br.readLine());
        while(t-->0){
            String a = "ABABDABACDABABCABAB";
            String b = "ABABCABAB";
            KMPSearch(a,b);
        }
    }
}