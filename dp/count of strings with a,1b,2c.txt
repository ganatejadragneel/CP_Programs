import java.util.*;
import java.lang.*;
import java.io.*;
class GFG
{ 
    static int countbyDp(int [][][]dp,int n,int bCount,int cCount){
        if(bCount<0 || cCount<0) return 0;
        if(n==0) return 1;
        if(bCount==0 && cCount==0) return 1;
        if(dp[n][bCount][cCount]!=-1) return dp[n][bCount][cCount];
        int res = countbyDp(dp,n-1,bCount,cCount);
        res += countbyDp(dp,n-1,bCount-1,cCount);
        res += countbyDp(dp,n-1,bCount,cCount-1);
        
        dp[n][bCount][cCount]=res;
        return res;
    }
    static int countStrings(int n, int bCount,int cCount){
        int dp[][][]=new int[n+1][bCount+1][cCount+1];
        for(int i=0;i<=n;i++) for(int j=0;j<=bCount;j++) for(int k=0;k<=cCount;k++) dp[i][j][k]=-1;
        return countbyDp(dp,n,bCount,cCount);
    }
    public static void main (String[] args) throws IOException
    {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int t = Integer.parseInt(br.readLine().trim());
        while(t-->0){
            int n = Integer.parseInt(br.readLine().trim());
            System.out.println(countStrings(n,1,2));
        }
    }
}